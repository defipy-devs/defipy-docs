Search.setIndex({"docnames": ["balancer", "index", "stableswap", "tutorials/balancer_test", "tutorials/indexing_problem", "tutorials/stableswap_test", "tutorials/swap_deposit", "tutorials/uniswap_simulation", "tutorials/uniswap_test", "tutorials/withdraw_swap", "uniswap", "usage"], "filenames": ["balancer.rst", "index.rst", "stableswap.rst", "tutorials/balancer_test.ipynb", "tutorials/indexing_problem.ipynb", "tutorials/stableswap_test.ipynb", "tutorials/swap_deposit.ipynb", "tutorials/uniswap_simulation.ipynb", "tutorials/uniswap_test.ipynb", "tutorials/withdraw_swap.ipynb", "uniswap.rst", "usage.rst"], "titles": ["Balancer", "DeFiPy: DeFi Analytics with Python", "StableSwap", "Basic Weighted Pool", "Setup test LP using UniswapPy", "Basic Composable Stable", "Swap Deposit Fundamentals", "Simple LP Simulation", "Basic Uniswap", "Withdraw Swap Fundamentals", "Uniswap", "Usage"], "terms": {"class": [0, 2, 10], "manual_balanc": 0, "balancerexchang": [0, 3], "factory_struct": [0, 2, 10], "factorydata": [0, 2, 10], "exchg_struct": [0, 2, 10], "balancerexchangedata": [0, 1, 3], "how": [0, 1, 2, 7], "call": [0, 2], "liquid": [0, 1, 2, 4, 6, 7, 8, 9, 10], "pool": [0, 1, 2, 4, 6, 7, 9, 10], "us": [0, 1, 2, 8], "autom": [0, 2], "market": [0, 2], "maker": [0, 2], "self": [0, 2, 10], "factori": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10], "data": [0, 2, 4, 6, 10], "exchang": [0, 1, 2, 3, 4, 6, 8, 9, 10], "burn": [0, 2, 10], "share": [0, 1, 2], "amt_tkn_out": [0, 2, 3], "tkn_out": [0, 2, 3, 5], "_from": [0, 2, 10], "from": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10], "base": [0, 2, 8, 10], "number": 0, "amount": [0, 1, 2, 6, 7, 8, 10], "float": [0, 2, 3, 5, 10], "request": [0, 2, 9], "erc20": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10], "output": [0, 1, 2, 10], "str": [0, 2, 5, 6, 10], "user": [0, 1, 2, 3, 5, 10], "name": [0, 2, 10], "address": [0, 1, 2, 3, 4, 5, 8, 10], "exit_pool": 0, "amt_shares_out": [0, 3], "remov": [0, 2, 8, 10], "via": [0, 4, 9], "withdraw": [0, 8], "all": [0, 2, 3, 6], "asset": [0, 2, 3, 4, 6, 10], "within": [0, 2, 11], "exit": 0, "exit_swap_extern_amount_out": [0, 3], "singl": 0, "exit_swap_pool_amount_in": [0, 3], "get_amount_in": [0, 3], "tkn_in": [0, 2, 3, 5], "given": [0, 2, 4, 6, 9, 10], "some": [0, 2, 4], "an": [0, 1, 2, 3, 6, 10], "equival": [0, 2, 10], "other": [0, 2, 10], "input": [0, 2, 10], "get_amount_out": [0, 2, 3, 10], "amt_tkn_in": [0, 2, 3, 5], "get_pric": [0, 2, 3, 5, 10], "base_tkn": [0, 2], "opp_tkn": [0, 2], "get": [0, 2, 4, 9, 10], "price": [0, 2, 7, 10], "select": [0, 2, 3, 10], "pair": [0, 1, 2, 10], "denomin": [0, 2], "get_reserv": [0, 2, 4, 5, 10], "reserv": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10], "join_pool": [0, 1, 2, 3, 5], "balancervault": [0, 1, 3], "amt_shares_in": [0, 2, 3], "initi": [0, 2, 3, 6, 9, 10], "add": [0, 2, 8, 10], "deposit": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10], "tkn_grvaultoup": 0, "balancererc20group": 0, "group": [0, 2, 5], "object": [0, 1, 2], "join_swap_extern_amount_in": [0, 3], "come": [0, 2], "join_swap_pool_amount_out": [0, 3], "mint": [0, 2, 10], "new_shar": [0, 2], "updat": [0, 2, 10], "specif": [0, 2, 6], "new": [0, 2, 10], "summari": [0, 1, 2, 3, 4, 5, 6, 8, 9], "summar": 0, "current": [0, 2], "state": [0, 2], "swap": [0, 2, 4, 7, 10], "amt_swap": 0, "amt_fe": 0, "amt_out": [0, 9, 10], "swape": [0, 2], "swap_exact_amount_in": [0, 3], "swap_exact_amount_out": [0, 3], "balancerfactori": [0, 1, 3], "creat": [0, 1, 2, 10], "set": [0, 2, 4], "deploi": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10], "exchg_data": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10], "lp": [0, 1, 2, 5, 6, 9, 10], "newli": [0, 2, 10], "i": [0, 1, 2, 3, 5, 10], "also": [0, 2, 10, 11], "get_exchang": [0, 2, 10], "receiv": [0, 2, 6, 10], "map": [0, 2, 3, 10], "get_token": [0, 2, 5, 10], "balancerpi": [0, 1], "manag": [0, 2], "tkn": [0, 2, 5, 7, 8, 9, 10], "list": [0, 2], "tkn_dic": [0, 2], "dictionari": [0, 2, 10], "referenc": [0, 2], "tkn_denorm_wt": 0, "denorm": [0, 3], "tkn_bound": 0, "boolean": [0, 2, 10], "indic": [0, 2], "bound": 0, "add_token": [0, 1, 2, 3, 5], "bool": 0, "true": [0, 2, 10], "whether": [0, 1, 2], "check_tkn": [0, 2], "check": [0, 1, 2], "contain": [0, 2], "get_bal": [0, 2], "referen": [0, 2], "tkn_balanc": [0, 2, 5], "dict": [0, 2], "get_bound": 0, "norm_wts_dict": [0, 2], "get_denorm_weight": 0, "get_norm_weight": 0, "get_dict": [0, 2], "tkn_dict": [0, 2], "get_nam": [0, 2], "tkn_nm": [0, 2, 5], "delimit": [0, 2], "hyphen": [0, 2], "string": [0, 2], "normal": [0, 3], "tkn_name": [0, 2], "its": [0, 2, 4, 10], "symbol": [0, 1, 2, 3, 4, 5, 6, 8, 9], "retriev": [0, 2], "cwpquot": 0, "ie": [0, 2, 4, 9, 10], "get_amount_from_shar": 0, "amount_shares_in": 0, "uniswapexchang": [0, 2, 10], "uniswap": [0, 2], "cwpt": [0, 2, 3], "get_shares_from_amount": 0, "amount_in": [0, 2, 10], "lp_amt": [0, 2], "erc": [0, 2, 4, 6, 7, 10], "addr": [0, 2, 10], "token_nam": [0, 2, 3, 4, 5, 6, 9, 10], "token_addr": [0, 2, 10], "token_tot": [0, 2, 5, 10], "hold": [0, 2, 10], "valu": [0, 2, 4, 5, 10], "delta": [0, 2, 6, 10], "total": [0, 2, 4, 6, 9, 10], "transfer": [0, 2, 10], "_to": [0, 2, 10], "out": [0, 1, 2, 6, 8, 9, 10], "For": [0, 2, 6, 10], "import": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10], "lumach": [0, 2, 10], "get_random_ingredi": [0, 2, 10], "shell": [0, 2, 10], "gorgonzola": [0, 2, 10], "parslei": [0, 2, 10], "decoupl": 1, "uniswappi": [1, 6, 7, 9, 10], "stableswappi": [1, 2], "packag": [1, 11], "To": [1, 6, 11], "setup": [1, 11], "you": 1, "must": [1, 6, 11], "first": [1, 6, 11], "token": [1, 4, 6, 8, 9], "next": 1, "ifactori": 1, "onc": [1, 11], "thi": [1, 4], "unlimit": 1, "can": 1, "procedur": 1, "ar": [1, 3, 8], "follow": [1, 3, 4, 9], "user_nm": [1, 4, 6, 8, 9, 10], "user_intro": 1, "eth_amount": [1, 4, 6, 8, 9], "1000": [1, 6, 8, 9], "dai_amount": [1, 4], "1000000": [1, 4, 6], "dai": [1, 3, 4, 7], "0x01": 1, "eth": [1, 8, 9], "0x02": 1, "uniswapfactori": [1, 4, 6, 7, 8, 9, 10], "0x": 1, "uniswapexchangedata": [1, 4, 6, 8, 9, 10], "tkn0": [1, 4, 6, 8, 9], "tkn1": [1, 4, 6, 8, 9], "0x11": 1, "add_liquid": [1, 2, 4, 5, 6, 8, 9, 10], "user0": [1, 6, 8, 9], "31622": [1, 4, 6, 8], "776601683792": [1, 4, 6, 8], "user_test": [1, 3, 4, 5], "amt_dai": [1, 3, 5], "10000000": [1, 3], "denorm_wt_dai": [1, 3], "10": [1, 3, 4, 5, 6, 7, 8, 9], "amt_eth": [1, 3], "67738": [1, 3], "6361731024": [1, 3], "denorm_wt_eth": [1, 3], "40": [1, 3], "init_pool_shar": [1, 3], "100": [1, 3, 6, 8, 9], "none": [1, 2, 3, 5, 10], "weth": [1, 3], "bgrp": [1, 3], "bfactori": [1, 3], "vault": [1, 3, 5], "0x1": 1, "weight": [1, 2], "0": [1, 3, 4, 5, 7, 8, 9, 10], "2": [1, 3, 4, 5, 6, 7, 9], "8": [1, 3, 4, 5, 6, 7, 8, 9], "ampl_coeff": [1, 2, 5], "2000": [1, 4, 5], "79566307": [1, 5], "559825807715868071": [1, 5], "decimal_dai": [1, 5], "18": [1, 3, 5, 7, 8], "amt_usdc": [1, 5], "81345068": [1, 5], "187939": [1, 5], "decimal_usdc": [1, 5], "6": [1, 3, 4, 5, 6, 7, 8, 9], "amt_usdt": [1, 5], "55663250": [1, 5], "772939": [1, 5], "decimal_usdt": [1, 5], "usdc": [1, 6], "usdt": 1, "0x03": 1, "sgrp": [1, 5], "stableswapvault": [1, 2, 5], "sfactori": [1, 5], "stableswapfactori": [1, 2, 5], "stableswapexchangedata": [1, 2, 5], "55982581": [1, 5], "216573027": [1, 5], "91811988": [1, 5], "These": [1, 6], "doc": [1, 4, 11], "intend": 1, "anyon": 1, "who": 1, "interfac": 1, "build": 1, "re": [1, 3, 5, 9], "trade": [1, 4, 9], "aggreg": 1, "yield": 1, "trader": 1, "provid": 1, "founder": 1, "web": 1, "dev": [1, 3, 11], "arbitrageur": 1, "amm": 1, "design": 1, "mathematician": 1, "curiou": 1, "individu": 1, "place": 1, "usag": 1, "section": 1, "further": 1, "inform": 1, "includ": [1, 6], "instal": 1, "project": 1, "under": [1, 6], "activ": 1, "develop": 1, "manual_stableswap": 2, "stableswapexchang": 2, "constant": [2, 4, 9], "product": [2, 4, 9], "tkn_amt_in": 2, "liquidity_out": 2, "tkn_out_amt": [2, 3, 5], "get_math_pool": [2, 5], "underli": 2, "stableswappoolmath": 2, "math_pool": [2, 5], "math": [2, 3, 4, 6, 7, 8, 9], "implement": [2, 3], "curveresearch": 2, "github": [2, 11], "repo": [2, 3], "fee": [2, 4, 9], "fals": [2, 4, 7], "stableswaperc20group": 2, "new_liquid": 2, "remove_liquid": [2, 5, 10], "liquidity_amt_out": 2, "use_fe": 2, "specifi": 2, "print": [2, 3, 4, 5, 6, 7, 9], "amt2dec": 2, "tkn_amt": 2, "decim": [2, 5, 10], "convert": 2, "int": [2, 10], "balanc": 2, "get_decimal_amt": [2, 5], "format": [2, 6, 9], "decimal_amt": 2, "get_decim": 2, "get_rat": 2, "rate": [2, 9], "tkn_rate": 2, "csquot": 2, "get_lp_from_amount": [2, 4, 10], "reset": [2, 10], "python": [3, 11], "broadli": 3, "consist": 3, "two": [3, 6], "main": 3, "compon": 3, "balancermath": 3, "py": 3, "refactor": 3, "v1": 3, "solid": 3, "contract": 3, "code": 3, "wa": [3, 5], "copi": [3, 8], "balancerpools_model": 3, "gh": 3, "The": [3, 4, 6, 9], "bmath": 3, "calcspotpric": 3, "calc_spot_pric": 3, "calcoutgivenin": 3, "calc_out_given_in": 3, "calcingivenout": 3, "calc_in_given_out": 3, "ad": 3, "calcpooloutgivensinglein": 3, "calc_pool_out_given_single_in": 3, "calcsingleingivenpoolout": 3, "calc_single_in_given_pool_out": 3, "calcpoolingivensingleout": 3, "calc_pool_in_given_single_out": 3, "calcsingleoutgivenpoolin": 3, "calc_single_out_given_pool_in": 3, "1": [3, 5, 7, 9], "o": [3, 4, 6, 7, 8, 9], "json": [3, 5], "numpi": [3, 5, 6, 7, 8, 9], "np": [3, 5, 6, 7, 8, 9], "defipi": [3, 5, 8, 11], "test": 3, "extract": 3, "3": [3, 4, 5, 6, 7, 8, 9, 11], "cwd": [3, 4], "getcwd": [3, 4], "replac": [3, 4], "notebook": [3, 4], "chdir": [3, 4], "actions_json": 3, "resourc": 3, "0x8b6e6e7b5b3801fed2cafd4b22b8a16c2f2db21a": 3, "action": 3, "open": 3, "r": 3, "f": [3, 4, 5, 7], "pool_act": 3, "load": 3, "loos": 3, "target": 3, "percentag": [3, 8], "deploy": 3, "sum": 3, "calcul": [3, 8, 9, 10], "typic": 3, "4": [3, 4, 5, 6, 7, 8, 9], "5": [3, 4, 5, 6, 7, 8, 9], "0x111": [3, 4, 6, 7, 8, 9], "0x09": [3, 4, 6, 7, 8, 9], "0x2": [3, 4, 5, 6, 8, 9], "0x011": [3, 4, 5, 6, 8, 9], "p": 3, "591": 3, "984912776992": 3, "7": [3, 4, 5, 6, 7, 8, 9, 11], "token_in": [3, 4, 6, 9, 10], "11861": 3, "328308361": 3, "20": [3, 4, 5, 7, 8], "021734704865246": 3, "10011861": 3, "32830836": 3, "67718": 3, "61443839753": 3, "9": [3, 4, 5, 6, 7, 8, 9], "tkn_in_amt": 3, "11878": 3, "911104285744": 3, "9999982": 3, "417204075": 3, "11": [3, 4, 5, 6, 7, 8, 9], "336": 3, "result": 3, "anaddit": 3, "shares_in_amt": 3, "26": [3, 5], "741601415598677": 3, "03156505964916199": 3, "12": [3, 4, 5, 6, 7, 8], "67765": 3, "377774518": 3, "03156505964917": 3, "13": [3, 4, 5, 7, 8], "were": 3, "addit": 3, "8575": 3, "568763821291": 3, "14": [3, 4, 5, 6, 7, 8], "76340": 3, "94653833928": 3, "110": 3, "15": [3, 4, 5, 7, 8], "664": 3, "token_out": [3, 9], "shares_out_amt": 3, "27": 3, "036668416618735": 3, "031191445644352424": 3, "16": [3, 4, 5, 7, 8], "76313": 3, "90986992266": 3, "00037361400481": 3, "17": [3, 5, 7, 8], "8566": 3, "8415530723": 3, "67747": 3, "06831685036": 3, "ipython": 4, "displai": 4, "imag": 4, "medium_articl": 4, "cpt": [4, 6, 7, 9, 10], "quot": [4, 6], "lpquot": [4, 6, 10], "util": [4, 6, 7], "have": [4, 6, 11], "dl": [4, 9], "want": 4, "know": 4, "home": 4, "much": 4, "x": [4, 6, 7, 8, 9, 10], "y": [4, 6, 8, 9, 10], "worth": 4, "start": [4, 7], "frac": [4, 6, 9], "dx": [4, 6, 9], "2l": 4, "substitut": 4, "abov": [4, 11], "2x": 4, "henc": [4, 9], "nbsphinx": [4, 6, 9], "sim": 4, "likewis": 4, "logic": 4, "work": 4, "ok": 4, "small": 4, "so": 4, "assum": 4, "suppli": [4, 9], "lp_posit": 4, "01": 4, "total_suppli": [4, 5, 8, 9], "naive_approxim": 4, "5f": 4, "napproach": 4, "316": 4, "22777": 4, "00000": 4, "howev": [4, 6], "larg": 4, "77660": 4, "complet": 4, "off": 4, "onli": [4, 8], "indexing_problem": 4, "indexed_tkn": 4, "png": 4, "width": 4, "300": 4, "height": 4, "definit": [4, 9], "gamma": [4, 9], "where": [4, 6, 9], "reserve0": [4, 6, 9, 10], "r0": [4, 9], "reserve1": [4, 6, 9, 10], "r1": [4, 9], "a0": [4, 9], "a1": [4, 9], "left": [4, 6, 7, 9], "997": [4, 6, 9], "right": [4, 6, 9], "defin": 4, "linear": [4, 9], "system": [4, 9, 11], "equat": [4, 9], "eq": [4, 6, 9], "y_": [4, 9], "def": [4, 6, 9], "calc_tkn_settl": 4, "token1": [4, 9], "els": [4, 5, 6, 9], "dy1": 4, "dy2": 4, "itkn_amt": [4, 9, 10], "return": [4, 6, 8, 9], "delta_l": 4, "delta_eth": 4, "delta_dai": 4, "06315": 4, "63": 4, "14969": 4, "settlement_lp_tkn": 4, "outlin": [4, 9], "rearrang": [4, 9], "plug": [4, 9], "xy": [4, 9, 10], "reduc": [4, 9], "quadrat": [4, 9], "1000xy": [4, 9], "1000l": [4, 9], "a2": [4, 9], "b": [4, 6, 7, 9, 10], "c": [4, 6, 9], "sqrt": [4, 6, 9], "quote_oppos": [4, 10], "get_amount_from_lp": [4, 10], "delta_eth_lp": 4, "delta_dai_lp": 4, "As": 4, "mechanisim": 4, "valid": 4, "back": 4, "origin": 4, "both": [4, 6, 10], "indexed_approach": 4, "2f": [4, 6], "23": [4, 5, 7, 8], "00": 4, "19": [4, 5, 7, 8], "87": 4, "78": 4, "01583514496167512": 4, "0xa0b": 5, "0xf93": 5, "0xd7c": 5, "p_usdc_dai": 5, "p_dai_usdc": 5, "9999896456022903": 5, "0000103545049244": 5, "usdc_befor": 5, "usdt_befor": 5, "10000": [5, 7, 8], "9996": 5, "862748": 5, "leak": 5, "usdc_check": 5, "usdt_check": 5, "usdc_test": 5, "pass": 5, "fail": 5, "usdt_test": 5, "81355068": 5, "55653253": 5, "910191": 5, "dai_befor": 5, "9998": 5, "895308918858": 5, "dai_check": 5, "dai_test": 5, "79556308": 5, "6645169": 5, "81365068": 5, "liquidity_amt_in": 5, "919116999057": 5, "55663253": 5, "216583028": 5, "83723688": 5, "968444705135": 5, "79566308": 5, "216593027": 5, "8056816": 5, "amt_lp_out": 5, "250000": 5, "lp_amt_befor": 5, "250001": 5, "94300082736": 5, "lp_amt_check": 5, "lp_amt_test": 5, "amt": [5, 6, 9, 10], "79316306": 5, "72151607": 5, "216343027": 5, "500000": 5, "500009": 5, "469211": 5, "80865058": 5, "718728": 5, "215843027": 5, "499898": 5, "496234": 5, "21": [5, 7, 8], "55163355": 5, "413957": 5, "215343027": 5, "22": [5, 7, 8], "tkn_decimal_amt": 5, "lp_test": 5, "round": 5, "24": [5, 7, 8], "k": [5, 7, 10], "enumer": 5, "tkn_reserv": 5, "tkn_math_pool_bal": 5, "token_decim": 5, "assert": 5, "error": 5, "doe": 5, "NOT": 5, "match": 5, "WITH": 5, "25": [5, 7], "termcolor": [6, 9], "color": [6, 7, 9], "process": [6, 7], "withdrawswap": 6, "removeliquid": [6, 9], "addliquid": 6, "usdc_amount": 6, "A": [6, 9, 10], "certain": [6, 10], "one": [6, 10], "oper": 6, "perform": [6, 8], "approx": [6, 8], "oppos": [6, 10], "portion": [6, 9, 10], "incom": 6, "fund": 6, "achiev": 6, "equal": 6, "ensur": 6, "determin": [6, 10], "s_": 6, "x_": 6, "1000x": 6, "after": 6, "niniti": [6, 9], "n": [6, 9], "s_in": 6, "s_out": 6, "appli": [6, 8, 9, 10], "nlp": [6, 9], "post": [6, 9], "balance0": 6, "balance1": 6, "along": 6, "remain": [6, 8], "ntotal": 6, "6f": [6, 9], "unaccount": 6, "which": 6, "need": [6, 11], "consid": 6, "split": 6, "red": 6, "attr": 6, "bold": 6, "1050": [6, 9], "952517": 6, "026241844": 6, "1100": [6, 9], "997874": 6, "9798724081": 6, "33128": 6, "623106525876": 6, "47482": 6, "973758155924": 6, "000000": [6, 9], "2125": 6, "02012759191": 6, "97": [6, 9], "a1_out": 6, "instead": 6, "102": 6, "34": 6, "imbal": 6, "proper": 6, "1997": 6, "calc_deposit_port": 6, "token0": 6, "tkn_suppli": 6, "distrbut": 6, "4888217399419355": 6, "684341886080802e": 6, "1048": [6, 9], "8821739941936": 6, "953529": 6, "2490856305": 6, "33163": 6, "92929950274": 6, "48": [6, 9], "88217399419355": 6, "46470": 6, "75091436944": 6, "51": [6, 9], "117826005806386": 6, "882174": 6, "117826": 6, "dep": 6, "medium": 7, "articl": 7, "decentr": 7, "financ": 7, "panda": [7, 8], "pd": [7, 8], "matplotlib": [7, 8], "pyplot": [7, 8], "plt": [7, 8], "pymc3": 7, "datetim": [7, 8], "model": 7, "brownianmodel": 7, "swapdeposit": 7, "solvedelta": 7, "simplelpsimul": 7, "n_step": 7, "5000": 7, "start_pric": 7, "mu": 7, "sigma": 7, "n_path": 7, "p_arr": 7, "gen_gbm": 7, "exp_p_arr": 7, "median": 7, "axi": 7, "t_delta": 7, "linspac": 7, "365": 7, "num": 7, "2023": 7, "date_tim": 7, "arrai": 7, "timedelta": 7, "fig": 7, "figur": 7, "figsiz": 7, "usd_ax": 7, "gca": 7, "gp": 7, "plot_gp_dist": 7, "ax": 7, "sampl": 7, "transpos": 7, "palett": 7, "cool": 7, "plot_sampl": 7, "plot": 7, "white": 7, "linestyl": 7, "dash": 7, "label": 7, "sysusd": 7, "set_titl": 7, "gbm": 7, "sy": 7, "usd": 7, "fontsiz": 7, "set_ylabel": 7, "legend": 7, "facecolor": 7, "lightgrai": 7, "loc": 7, "upper": 7, "lt": 7, "0x7f920951ad60": 7, "gt": 7, "sys_arr": 7, "zero": 7, "float64": 7, "x_amt_arr": 7, "y_amt_arr": 7, "rang": 7, "trial": 7, "run": 7, "p_trial_arr": 7, "lp_sim": 7, "init_amt": 7, "create_lp": 7, "get_tkn_price_sim": 7, "get_x_amt_sim": 7, "get_y_amt_sim": 7, "p_ax": 7, "sys_ax": 7, "dai_ax": 7, "subplot": 7, "nrow": 7, "sharex": 7, "sharei": 7, "mean": 7, "w": 7, "linewidth": 7, "text": 7, "39": [7, 8], "vice": 8, "vers": 8, "desir": [8, 10], "50": [8, 9], "exact": 8, "time": 8, "tkn_amount": [8, 9], "100000": [8, 9], "990": 8, "1284196560293": 8, "101000": 8, "1010": 8, "99012": 8, "84196560294": 8, "10100": 8, "liquidity_provid": 8, "1e": 8, "999": 8, "99900": 8, "9990": 8, "100100": 8, "10004": 8, "991241237401": 8, "amount_out": [8, 10], "1001": 8, "0000000000001": 8, "upon": 8, "expect": [8, 10], "expected_amount_out": 8, "998": 8, "9999999999999": 8, "9994": 8, "99123998928": 8, "99899": 8, "99999999999": 8, "lp_tkn": 8, "tkn2": 8, "0x112": 8, "lp_tkn_amount": 8, "lp2": 8, "0x012": 8, "ethtkn": 8, "039930189601": 8, "10001": 8, "100010": 8, "31625": 8, "93887934396": 8, "10010": 8, "31654": 8, "399378285478": 8, "1009": 8, "9999999999998": 8, "1004": 8, "9800695579358": 8, "989": 8, "994": 8, "9799447405355": 8, "mth": 9, "trading_token": 9, "user_nm1": 9, "p_out": 9, "removeliq": 9, "withdrawn": 9, "Of": 9, "ha": 9, "been": 9, "10488": 9, "088481701516": 9, "95454": 9, "54545454546": 9, "10011": 9, "35718707872": 9, "1002": 9, "4094194662908": 9, "47": 9, "590581": 9, "eth_amt": 9, "requir": [9, 11], "settlement": [9, 10], "488": 9, "787567": 9, "587935447692871e": 9, "09": 9, "reconsid": 9, "redefin": 9, "alpha": 9, "thu": 9, "_": 9, "therefor": 9, "solver": 9, "calc_port": 9, "calc_withdraw_port": 9, "dy": 9, "aswap": 9, "correct": 9, "512645": 9, "735527472211": 9, "95339": 9, "59340656463": 9, "9999": 9, "300914574964": 9, "264473": 9, "735527": 9, "per": 9, "exchange_from_token": 10, "tokens_from_exchang": 10, "exchg": 10, "factoryinit": 10, "uniswapexchangeinit": 10, "_from_addr": 10, "amountadesir": 10, "amountbdesir": 10, "amountamin": 10, "amountbmin": 10, "minimum": 10, "to_addr": 10, "amounta": 10, "amountb": 10, "coin": 10, "est": 10, "maximum": 10, "get_amount_out0": 10, "get_amount_out1": 10, "get_amount": 10, "_amounta": 10, "_amountb": 10, "each": 10, "reservea": 10, "reserveb": 10, "amounta_out": 10, "amountb_out": 10, "swap_exact_tokens_for_token": 10, "amountin": 10, "amountoutmin": 10, "min": 10, "amount_out_expect": 10, "update_reserv": 10, "amounta_upd": 10, "amountb_upd": 10, "either": 10, "acccount": 10, "holder": 10, "indextokenquot": 10, "quote_native_token": 10, "otherwis": 10, "base_x_asset": 10, "base_y_asset": 10, "get_base_lp": 10, "parent": 10, "child": 10, "get_native_x": 10, "tkn_x": 10, "x_amt": 10, "get_native_i": 10, "tkn_y": 10, "y_amt": 10, "get_x": 10, "amt_lp": 10, "get_i": 10, "default": 10, "amount_lp_in": 10, "get_liquid": 10, "get_opposing_token": 10, "price_tkn": 10, "respect": 10, "rebaseindextoken": 10, "rebas": 10, "invers": 10, "settlementlptoken": 10, "liq_amt": 10, "what": 10, "term": 10, "rebase_amount": 10, "lp_amount": 10, "akjhsflkjbvjn": 10, "cn": 10, "vvk": 10, "intlkaflkw": 10, "nsdlkamna": 10, "intlkaflkwn": 10, "dlkamna": 10, "lperc20": 10, "daosi": 10, "type": 10, "add_token_lp": 10, "remove_token_lp": 10, "set_token_lp": 10, "gmpy2": 11, "handl": 11, "precis": 11, "stableswap": 11, "protocol": 11, "cpython": 11, "latest": 11, "releas": 11, "pip": 11, "mani": 11, "case": 11, "librari": 11, "gmp": 11, "mpfr": 11, "mpc": 11, "alreadi": 11, "your": 11, "see": 11, "more": 11, "info": 11, "git": 11, "clone": 11, "http": 11, "com": 11}, "objects": {"balancerpy": [[0, 0, 0, "-", "erc"], [0, 0, 0, "-", "vault"]], "balancerpy.erc": [[0, 1, 1, "", "ERC20"]], "balancerpy.erc.ERC20": [[0, 2, 1, "", "deposit"], [0, 2, 1, "", "transfer"]], "balancerpy.vault": [[0, 1, 1, "", "BalancerVault"]], "balancerpy.vault.BalancerVault": [[0, 2, 1, "", "add_token"], [0, 2, 1, "", "check_tkn"], [0, 2, 1, "", "get_balances"], [0, 2, 1, "", "get_bounds"], [0, 2, 1, "", "get_denorm_weights"], [0, 2, 1, "", "get_dict"], [0, 2, 1, "", "get_name"], [0, 2, 1, "", "get_names"], [0, 2, 1, "", "get_norm_weights"], [0, 2, 1, "", "get_token"], [0, 2, 1, "", "get_tokens"]], "": [[0, 0, 0, "module-0", "manual_balancer"], [2, 0, 0, "module-0", "manual_stableswap"]], "manual_balancer": [[0, 1, 1, "", "BalancerExchange"], [0, 1, 1, "", "BalancerFactory"], [0, 1, 1, "", "CWPQuote"]], "manual_balancer.BalancerExchange": [[0, 2, 1, "", "burn"], [0, 2, 1, "", "exit_pool"], [0, 2, 1, "", "exit_swap_extern_amount_out"], [0, 2, 1, "", "exit_swap_pool_amount_in"], [0, 2, 1, "", "get_amount_in"], [0, 2, 1, "", "get_amount_out"], [0, 2, 1, "", "get_price"], [0, 2, 1, "", "get_reserve"], [0, 2, 1, "", "join_pool"], [0, 2, 1, "", "join_swap_extern_amount_in"], [0, 2, 1, "", "join_swap_pool_amount_out"], [0, 2, 1, "", "mint"], [0, 2, 1, "", "summary"], [0, 2, 1, "", "swap"], [0, 2, 1, "", "swap_exact_amount_in"], [0, 2, 1, "", "swap_exact_amount_out"]], "manual_balancer.BalancerFactory": [[0, 2, 1, "", "deploy"], [0, 2, 1, "", "get_exchange"], [0, 2, 1, "", "get_token"]], "manual_balancer.CWPQuote": [[0, 2, 1, "", "get_amount_from_shares"], [0, 2, 1, "", "get_shares_from_amount"]], "manual_stableswap": [[2, 1, 1, "", "CSQuote"], [2, 1, 1, "", "StableswapExchange"], [2, 1, 1, "", "StableswapFactory"]], "manual_stableswap.CSQuote": [[2, 2, 1, "", "get_lp_from_amount"]], "manual_stableswap.StableswapExchange": [[2, 2, 1, "", "add_liquidity"], [2, 2, 1, "", "burn"], [2, 2, 1, "", "get_amount_out"], [2, 2, 1, "", "get_math_pool"], [2, 2, 1, "", "get_price"], [2, 2, 1, "", "get_reserve"], [2, 2, 1, "", "join_pool"], [2, 2, 1, "", "mint"], [2, 2, 1, "", "remove_liquidity"], [2, 2, 1, "", "summary"], [2, 2, 1, "", "swap"]], "manual_stableswap.StableswapFactory": [[2, 2, 1, "", "deploy"], [2, 2, 1, "", "get_exchange"], [2, 2, 1, "", "get_token"]], "stableswappy": [[2, 0, 0, "-", "erc"], [2, 0, 0, "-", "vault"]], "stableswappy.erc": [[2, 1, 1, "", "ERC20"]], "stableswappy.erc.ERC20": [[2, 2, 1, "", "deposit"], [2, 2, 1, "", "transfer"]], "stableswappy.vault": [[2, 1, 1, "", "StableswapVault"]], "stableswappy.vault.StableswapVault": [[2, 2, 1, "", "add_token"], [2, 2, 1, "", "amt2dec"], [2, 2, 1, "", "check_tkn"], [2, 2, 1, "", "get_balances"], [2, 2, 1, "", "get_decimal_amts"], [2, 2, 1, "", "get_decimals"], [2, 2, 1, "", "get_dict"], [2, 2, 1, "", "get_name"], [2, 2, 1, "", "get_names"], [2, 2, 1, "", "get_rates"], [2, 2, 1, "", "get_token"], [2, 2, 1, "", "get_tokens"]], "uniswappy.cpt": [[10, 0, 0, "-", "exchg"], [10, 0, 0, "-", "factory"], [10, 0, 0, "-", "index"], [10, 0, 0, "-", "quote"]], "uniswappy.cpt.exchg": [[10, 1, 1, "", "UniswapExchange"]], "uniswappy.cpt.exchg.UniswapExchange": [[10, 2, 1, "", "add_liquidity"], [10, 2, 1, "", "burn"], [10, 2, 1, "", "get_amount_out"], [10, 2, 1, "", "get_amount_out0"], [10, 2, 1, "", "get_amount_out1"], [10, 2, 1, "", "get_amounts"], [10, 2, 1, "", "get_price"], [10, 2, 1, "", "get_reserve"], [10, 2, 1, "", "mint"], [10, 2, 1, "", "quote"], [10, 2, 1, "", "remove_liquidity"], [10, 2, 1, "", "swap"], [10, 2, 1, "", "swap_exact_tokens_for_tokens"], [10, 2, 1, "", "update_reserves"]], "uniswappy.cpt.factory": [[10, 1, 1, "", "UniswapFactory"]], "uniswappy.cpt.factory.UniswapFactory": [[10, 2, 1, "", "deploy"], [10, 2, 1, "", "get_exchange"], [10, 2, 1, "", "get_token"]], "uniswappy.cpt.index": [[10, 1, 1, "", "RebaseIndexToken"], [10, 1, 1, "", "SettlementLPToken"]], "uniswappy.cpt.index.RebaseIndexToken": [[10, 2, 1, "", "apply"]], "uniswappy.cpt.index.SettlementLPToken": [[10, 2, 1, "", "apply"]], "uniswappy.cpt.quote": [[10, 1, 1, "", "IndexTokenQuote"], [10, 1, 1, "", "LPQuote"]], "uniswappy.cpt.quote.IndexTokenQuote": [[10, 2, 1, "", "base_x_asset"], [10, 2, 1, "", "base_y_asset"], [10, 2, 1, "", "get_base_lp"], [10, 2, 1, "", "get_native_x"], [10, 2, 1, "", "get_native_y"], [10, 2, 1, "", "get_x"], [10, 2, 1, "", "get_y"]], "uniswappy.cpt.quote.LPQuote": [[10, 2, 1, "", "get_amount"], [10, 2, 1, "", "get_amount_from_lp"], [10, 2, 1, "", "get_liquidity"], [10, 2, 1, "", "get_lp_from_amount"], [10, 2, 1, "", "get_opposing_token"], [10, 2, 1, "", "get_price"], [10, 2, 1, "", "get_reserve"]], "uniswappy": [[10, 0, 0, "-", "erc"]], "uniswappy.erc": [[10, 1, 1, "", "ERC20"], [10, 1, 1, "", "LPERC20"]], "uniswappy.erc.ERC20": [[10, 2, 1, "", "deposit"], [10, 2, 1, "", "transfer"]], "uniswappy.erc.LPERC20": [[10, 2, 1, "", "add_token_lp"], [10, 2, 1, "", "remove_token_lp"], [10, 2, 1, "", "set_token_lp"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"]}, "titleterms": {"balanc": [0, 1, 3, 5], "constant": [0, 10], "weight": [0, 3], "product": [0, 10], "trade": [0, 2, 10], "paramet": [0, 2, 3, 5, 10], "return": [0, 2, 10], "vault": [0, 2], "quot": [0, 2, 10], "token": [0, 2, 3, 5, 10], "exampl": [0, 1, 2, 10], "usag": [0, 2, 10, 11], "defipi": 1, "defi": 1, "analyt": 1, "python": 1, "uniswap": [1, 8, 10], "stableswap": [1, 2, 5], "welcom": 1, "": [1, 4, 6, 9], "document": 1, "content": 1, "compos": [2, 5], "stabl": [2, 5], "basic": [3, 5, 8], "pool": [3, 5, 8], "benchmark": 3, "join": [3, 5], "price": [3, 5], "swap": [3, 5, 6, 8, 9], "out": 3, "given": 3, "add": [3, 5], "liquid": [3, 5], "base": 3, "amount": 3, "lp": [3, 4, 7, 8], "share": 3, "remov": [3, 5], "setup": [4, 8], "test": 4, "us": [4, 6, 9], "uniswappi": 4, "index": [4, 9, 10], "problem": [4, 6, 9], "settlement": 4, "now": [4, 6, 9], "solv": [4, 6, 9], "delta": [4, 9], "l": [4, 9], "calc_lp_settl": [4, 9], "final": [4, 6, 9], "let": [4, 6, 9], "see": [4, 6], "how": [4, 6], "approach": 4, "size": 4, "up": 4, "against": [4, 6], "naiv": 4, "we": [4, 6, 9], "can": [4, 6, 9], "approxim": 4, "i": [4, 6, 9], "pretti": 4, "close": 4, "our": [4, 6, 9], "solut": [4, 6, 9], "1": [4, 6, 8], "try": 4, "100": 4, "excel": 4, "all": [4, 5], "1000": 4, "eth": [4, 6], "ar": [4, 6], "account": 4, "asset": 5, "usdc": 5, "dai": 5, "usdt": 5, "check": [5, 6, 9], "exchang": 5, "math": 5, "deposit": 6, "fundament": [6, 9], "swapdeposit": [6, 8], "incl": 6, "fee": 6, "follow": 6, "thi": 6, "system": 6, "equat": 6, "highlight": 6, "why": 6, "abov": [6, 9], "consider": 6, "import": 6, "address": [6, 9], "plug": 6, "mani": 6, "tkn": 6, "get": 6, "when": [6, 9], "50": 6, "step": [6, 9], "alpha": 6, "calcul": 6, "correct": 6, "distribut": [6, 9], "calc_deposit_dist": 6, "reduc": 6, "quadrat": 6, "should": 6, "expect": 6, "0": 6, "run": [6, 9], "through": [6, 9], "compar": [6, 9], "integr": [6, 9], "simpl": 7, "simul": 7, "2": 8, "addliquid": 8, "removeliquid": 8, "withdrawswap": [8, 9], "withdraw": 9, "defin": 9, "determin": 9, "split": 9, "instal": 11}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "nbsphinx": 4, "sphinx": 60}, "alltitles": {"Balancer": [[0, "balancer"]], "Constant Weighted Product Trading": [[0, "module-manual_balancer"]], "Parameters": [[0, "parameters"], [0, "id1"], [0, "id2"], [0, "id3"], [0, "id4"], [0, "id5"], [0, "id6"], [0, "id7"], [0, "id8"], [0, "id9"], [0, "id10"], [0, "id11"], [0, "id12"], [0, "id13"], [0, "id14"], [0, "id15"], [0, "id16"], [0, "id17"], [0, "id18"], [0, "id20"], [0, "id22"], [0, "id23"], [0, "id24"], [0, "id33"], [0, "id36"], [0, "id38"], [0, "id40"], [0, "id41"], [0, "id42"], [2, "parameters"], [2, "id1"], [2, "id2"], [2, "id3"], [2, "id4"], [2, "id5"], [2, "id6"], [2, "id7"], [2, "id8"], [2, "id9"], [2, "id10"], [2, "id11"], [2, "id12"], [2, "id13"], [2, "id15"], [2, "id17"], [2, "id18"], [2, "id20"], [2, "id29"], [2, "id32"], [2, "id34"], [2, "id35"], [2, "id36"], [3, "Parameters"], [5, "Parameters"], [10, "parameters"], [10, "id1"], [10, "id2"], [10, "id4"], [10, "id6"], [10, "id7"], [10, "id8"], [10, "id9"], [10, "id11"], [10, "id13"], [10, "id15"], [10, "id17"], [10, "id18"], [10, "id19"], [10, "id20"], [10, "id21"], [10, "id23"], [10, "id24"], [10, "id26"], [10, "id27"], [10, "id28"], [10, "id30"], [10, "id32"], [10, "id34"], [10, "id36"], [10, "id38"], [10, "id40"], [10, "id42"], [10, "id43"], [10, "id45"], [10, "id47"], [10, "id49"], [10, "id51"], [10, "id53"], [10, "id55"], [10, "id57"], [10, "id59"], [10, "id61"], [10, "id62"], [10, "id63"], [10, "id64"], [10, "id65"], [10, "id66"], [10, "id67"]], "Returns": [[0, "returns"], [0, "id19"], [0, "id21"], [0, "id25"], [0, "id26"], [0, "id27"], [0, "id28"], [0, "id29"], [0, "id30"], [0, "id31"], [0, "id32"], [0, "id34"], [0, "id35"], [0, "id37"], [0, "id39"], [2, "returns"], [2, "id14"], [2, "id16"], [2, "id19"], [2, "id21"], [2, "id22"], [2, "id23"], [2, "id24"], [2, "id25"], [2, "id26"], [2, "id27"], [2, "id28"], [2, "id30"], [2, "id31"], [2, "id33"], [10, "returns"], [10, "id3"], [10, "id5"], [10, "id10"], [10, "id12"], [10, "id14"], [10, "id16"], [10, "id22"], [10, "id25"], [10, "id29"], [10, "id31"], [10, "id33"], [10, "id35"], [10, "id37"], [10, "id39"], [10, "id41"], [10, "id44"], [10, "id46"], [10, "id48"], [10, "id50"], [10, "id52"], [10, "id54"], [10, "id56"], [10, "id58"], [10, "id60"]], "Vault": [[0, "module-balancerpy.vault"], [2, "module-stableswappy.vault"]], "Quoting": [[0, "module-0"], [2, "module-0"], [10, "module-uniswappy.cpt.quote"]], "Tokens": [[0, "module-balancerpy.erc"], [2, "module-stableswappy.erc"], [5, "Tokens"], [10, "module-uniswappy.erc"]], "Examples for Usage": [[0, "examples-for-usage"], [2, "examples-for-usage"], [10, "examples-for-usage"]], "DeFiPy: DeFi Analytics with Python": [[1, "defipy-defi-analytics-with-python"]], "Uniswap Example": [[1, "uniswap-example"]], "Balancer Example": [[1, "balancer-example"]], "StableSwap Example": [[1, "stableswap-example"]], "Welcome to DeFiPy\u2019s documentation!": [[1, "welcome-to-defipy-s-documentation"]], "Contents": [[1, "contents"]], "StableSwap": [[2, "stableswap"]], "Composable Stable Trading": [[2, "module-manual_stableswap"]], "Basic Weighted Pool": [[3, "Basic-Weighted-Pool"]], "Benchmarks": [[3, "Benchmarks"]], "Join balancer pool": [[3, "Join-balancer-pool"]], "Price": [[3, "Price"]], "Swap (out-given-in)": [[3, "Swap-(out-given-in)"]], "Swap (in-given-out)": [[3, "Swap-(in-given-out)"]], "Add liquidity (based on token amounts)": [[3, "Add-liquidity-(based-on-token-amounts)"]], "Add liquidity (based on LP share amounts)": [[3, "Add-liquidity-(based-on-LP-share-amounts)"]], "Remove liquidity (based on token amounts)": [[3, "Remove-liquidity-(based-on-token-amounts)"]], "Remove liquidity (based on LP share amounts)": [[3, "Remove-liquidity-(based-on-LP-share-amounts)"]], "Setup test LP using UniswapPy": [[4, "Setup-test-LP-using-UniswapPy"]], "Indexing problem": [[4, "Indexing-problem"]], "Settlement problem": [[4, "Settlement-problem"]], "Now, solve for \\Delta L using calc_lp_settlement": [[4, "Now,-solve-for-\\Delta-L-using-calc_lp_settlement"], [9, "Now,-solve-for-\\Delta-L-using-calc_lp_settlement"]], "Using UniswapPy": [[4, "Using-UniswapPy"]], "Finally, let\u2019s see how Indexed approach sizes up against the Naive approach": [[4, "Finally,-let's-see-how-Indexed-approach-sizes-up-against-the-Naive-approach"]], "We can see that the Naive approximation is pretty close to our Indexed solution (with 1% LP); let\u2019s now try 100%": [[4, "We-can-see-that-the-Naive-approximation-is-pretty-close-to-our-Indexed-solution-(with-1%-LP);-let's-now-try-100%"]], "Excellent, we see that with our Indexed solution all 1000 ETH are accounted for using the indexed approach": [[4, "Excellent,-we-see-that-with-our-Indexed-solution-all-1000-ETH-are-accounted-for-using-the-indexed-approach"]], "Basic Composable Stable": [[5, "Basic-Composable-Stable"]], "Join Stableswap Pool with all Assets": [[5, "Join-Stableswap-Pool-with-all-Assets"]], "Price: USDC/DAI and DAI/USDC": [[5, "Price:-USDC/DAI-and-DAI/USDC"]], "Swap: USDC -> USDT": [[5, "Swap:-USDC-->-USDT"]], "Swap: USDC -> DAI": [[5, "Swap:-USDC-->-DAI"]], "Add Liquidity: USDT": [[5, "Add-Liquidity:-USDT"]], "Add Liquidity: DAI": [[5, "Add-Liquidity:-DAI"]], "Remove Liquidity: DAI": [[5, "Remove-Liquidity:-DAI"]], "Remove Liquidity: USDC": [[5, "Remove-Liquidity:-USDC"]], "Remove Liquidity: USDT": [[5, "Remove-Liquidity:-USDT"]], "Check Exchange / Math Pool / Token Balances": [[5, "Check-Exchange-/-Math-Pool-/-Token-Balances"]], "Swap Deposit Fundamentals": [[6, "Swap-Deposit-Fundamentals"]], "SwapDeposit (incl. fee):": [[6, "SwapDeposit-(incl.-fee):"]], "Follows this system of equations:": [[6, "Follows-this-system-of-equations:"]], "Let\u2019s highlight why the above considerations are important \u2026": [[6, "Let's-highlight-why-the-above-considerations-are-important-..."]], "Let\u2019s now address this problem \u2026": [[6, "Let's-now-address-this-problem-..."]], "Plug above into equation (1), and see how many TKN we get when 50% of ETH is swapped in for step (1)": [[6, "Plug-above-into-equation-(1),-and-see-how-many-TKN-we-get-when-50%-of-ETH-is-swapped-in-for-step-(1)"]], "Now, lets check how many ETH gets SwapDeposited in when 50% of ETH is swapped in for step (1)": [[6, "Now,-lets-check-how-many-ETH-gets-SwapDeposited-in-when-50%-of-ETH-is-swapped-in-for-step-(1)"]], "Now, solve for \\alpha, and we can calculate the correct distribution using calc_deposit_dist": [[6, "Now,-solve-for-\\alpha,-and-we-can-calculate-the-correct-distribution-using-calc_deposit_dist"]], "Now, check against our reduced quadratic, and we should expect to get 0": [[6, "Now,-check-against-our-reduced-quadratic,-and-we-should-expect-to-get-0"]], "Finally, lets run through the steps to a SwapDeposit and compare above": [[6, "Finally,-lets-run-through-the-steps-to-a-SwapDeposit-and-compare-above"]], "Finally, let\u2019s check when our solution is integrated into SwapDeposit": [[6, "Finally,-let's-check-when-our-solution-is-integrated-into-SwapDeposit"]], "Simple LP Simulation": [[7, "Simple-LP-Simulation"]], "Basic Uniswap": [[8, "Basic-Uniswap"]], "Setup pool": [[8, "Setup-pool"]], "#1 Swap()": [[8, "#1-Swap()"]], "#2 Swap()": [[8, "#2-Swap()"]], "#1 AddLiquidity()": [[8, "#1-AddLiquidity()"]], "#2 AddLiquidity()": [[8, "#2-AddLiquidity()"]], "#1 RemoveLiquidity()": [[8, "#1-RemoveLiquidity()"]], "#2 RemoveLiquidity()": [[8, "#2-RemoveLiquidity()"]], "#1 SwapDeposit()": [[8, "#1-SwapDeposit()"]], "#2 SwapDeposit()": [[8, "#2-SwapDeposit()"]], "#1 WithdrawSwap():": [[8, "#1-WithdrawSwap():"]], "#2 WithdrawSwap():": [[8, "#2-WithdrawSwap():"]], "#1 Swap() LP:": [[8, "#1-Swap()-LP:"]], "#2 Swap() LP:": [[8, "#2-Swap()-LP:"]], "#1 AddLiquidity LP:": [[8, "#1-AddLiquidity-LP:"]], "#2 AddLiquidity LP:": [[8, "#2-AddLiquidity-LP:"]], "#1 RemoveLiquidity LP:": [[8, "#1-RemoveLiquidity-LP:"]], "#2 RemoveLiquidity LP:": [[8, "#2-RemoveLiquidity-LP:"]], "#1 SwapDeposit LP:": [[8, "#1-SwapDeposit-LP:"]], "#2 SwapDeposit LP:": [[8, "#2-SwapDeposit-LP:"]], "#1 WithdrawSwap LP:": [[8, "#1-WithdrawSwap-LP:"]], "#2 WithdrawSwap LP:": [[8, "#2-WithdrawSwap-LP:"]], "Withdraw Swap Fundamentals": [[9, "Withdraw-Swap-Fundamentals"]], "Indexing problem (defined)": [[9, "Indexing-problem-(defined)"]], "Let\u2019s now address the problem \u2026": [[9, "Let's-now-address-the-problem-..."]], "Using \\Delta L, we can determine the splitting distribution for withdrawal": [[9, "Using-\\Delta-L,-we-can-determine-the-splitting-distribution-for-withdrawal"]], "Finally, lets run through the steps to a WithdrawSwap and compare above": [[9, "Finally,-lets-run-through-the-steps-to-a-WithdrawSwap-and-compare-above"]], "Finally, let\u2019s check when our solution is integrated into WithdrawSwap": [[9, "Finally,-let's-check-when-our-solution-is-integrated-into-WithdrawSwap"]], "Uniswap": [[10, "uniswap"]], "Constant Product Trading": [[10, "module-uniswappy.cpt.factory"]], "Indexing": [[10, "module-uniswappy.cpt.index"]], "Usage": [[11, "usage"]], "Installation": [[11, "installation"]]}, "indexentries": {"balancerexchange (class in manual_balancer)": [[0, "manual_balancer.BalancerExchange"]], "balancerfactory (class in manual_balancer)": [[0, "manual_balancer.BalancerFactory"]], "balancervault (class in balancerpy.vault)": [[0, "balancerpy.vault.BalancerVault"]], "cwpquote (class in manual_balancer)": [[0, "manual_balancer.CWPQuote"]], "erc20 (class in balancerpy.erc)": [[0, "balancerpy.erc.ERC20"]], "add_token() (balancerpy.vault.balancervault method)": [[0, "balancerpy.vault.BalancerVault.add_token"]], "balancerpy.erc": [[0, "module-balancerpy.erc"]], "balancerpy.vault": [[0, "module-balancerpy.vault"]], "burn() (manual_balancer.balancerexchange method)": [[0, "manual_balancer.BalancerExchange.burn"]], "check_tkn() (balancerpy.vault.balancervault method)": [[0, "balancerpy.vault.BalancerVault.check_tkn"]], "deploy() (manual_balancer.balancerfactory method)": [[0, "manual_balancer.BalancerFactory.deploy"]], "deposit() (balancerpy.erc.erc20 method)": [[0, "balancerpy.erc.ERC20.deposit"]], "exit_pool() (manual_balancer.balancerexchange method)": [[0, "manual_balancer.BalancerExchange.exit_pool"]], "exit_swap_extern_amount_out() (manual_balancer.balancerexchange method)": [[0, "manual_balancer.BalancerExchange.exit_swap_extern_amount_out"]], "exit_swap_pool_amount_in() (manual_balancer.balancerexchange method)": [[0, "manual_balancer.BalancerExchange.exit_swap_pool_amount_in"]], "get_amount_from_shares() (manual_balancer.cwpquote method)": [[0, "manual_balancer.CWPQuote.get_amount_from_shares"]], "get_amount_in() (manual_balancer.balancerexchange method)": [[0, "manual_balancer.BalancerExchange.get_amount_in"]], "get_amount_out() (manual_balancer.balancerexchange method)": [[0, "manual_balancer.BalancerExchange.get_amount_out"]], "get_balances() (balancerpy.vault.balancervault method)": [[0, "balancerpy.vault.BalancerVault.get_balances"]], "get_bounds() (balancerpy.vault.balancervault method)": [[0, "balancerpy.vault.BalancerVault.get_bounds"]], "get_denorm_weights() (balancerpy.vault.balancervault method)": [[0, "balancerpy.vault.BalancerVault.get_denorm_weights"]], "get_dict() (balancerpy.vault.balancervault method)": [[0, "balancerpy.vault.BalancerVault.get_dict"]], "get_exchange() (manual_balancer.balancerfactory method)": [[0, "manual_balancer.BalancerFactory.get_exchange"]], "get_name() (balancerpy.vault.balancervault method)": [[0, "balancerpy.vault.BalancerVault.get_name"]], "get_names() (balancerpy.vault.balancervault method)": [[0, "balancerpy.vault.BalancerVault.get_names"]], "get_norm_weights() (balancerpy.vault.balancervault method)": [[0, "balancerpy.vault.BalancerVault.get_norm_weights"]], "get_price() (manual_balancer.balancerexchange method)": [[0, "manual_balancer.BalancerExchange.get_price"]], "get_reserve() (manual_balancer.balancerexchange method)": [[0, "manual_balancer.BalancerExchange.get_reserve"]], "get_shares_from_amount() (manual_balancer.cwpquote method)": [[0, "manual_balancer.CWPQuote.get_shares_from_amount"]], "get_token() (balancerpy.vault.balancervault method)": [[0, "balancerpy.vault.BalancerVault.get_token"]], "get_token() (manual_balancer.balancerfactory method)": [[0, "manual_balancer.BalancerFactory.get_token"]], "get_tokens() (balancerpy.vault.balancervault method)": [[0, "balancerpy.vault.BalancerVault.get_tokens"]], "join_pool() (manual_balancer.balancerexchange method)": [[0, "manual_balancer.BalancerExchange.join_pool"]], "join_swap_extern_amount_in() (manual_balancer.balancerexchange method)": [[0, "manual_balancer.BalancerExchange.join_swap_extern_amount_in"]], "join_swap_pool_amount_out() (manual_balancer.balancerexchange method)": [[0, "manual_balancer.BalancerExchange.join_swap_pool_amount_out"]], "manual_balancer": [[0, "module-0"], [0, "module-manual_balancer"]], "mint() (manual_balancer.balancerexchange method)": [[0, "manual_balancer.BalancerExchange.mint"]], "module": [[0, "module-0"], [0, "module-balancerpy.erc"], [0, "module-balancerpy.vault"], [0, "module-manual_balancer"], [2, "module-0"], [2, "module-manual_stableswap"], [2, "module-stableswappy.erc"], [2, "module-stableswappy.vault"], [10, "module-uniswappy.cpt.exchg"], [10, "module-uniswappy.cpt.factory"], [10, "module-uniswappy.cpt.index"], [10, "module-uniswappy.cpt.quote"], [10, "module-uniswappy.erc"]], "summary() (manual_balancer.balancerexchange method)": [[0, "manual_balancer.BalancerExchange.summary"]], "swap() (manual_balancer.balancerexchange method)": [[0, "manual_balancer.BalancerExchange.swap"]], "swap_exact_amount_in() (manual_balancer.balancerexchange method)": [[0, "manual_balancer.BalancerExchange.swap_exact_amount_in"]], "swap_exact_amount_out() (manual_balancer.balancerexchange method)": [[0, "manual_balancer.BalancerExchange.swap_exact_amount_out"]], "transfer() (balancerpy.erc.erc20 method)": [[0, "balancerpy.erc.ERC20.transfer"]], "csquote (class in manual_stableswap)": [[2, "manual_stableswap.CSQuote"]], "erc20 (class in stableswappy.erc)": [[2, "stableswappy.erc.ERC20"]], "stableswapexchange (class in manual_stableswap)": [[2, "manual_stableswap.StableswapExchange"]], "stableswapfactory (class in manual_stableswap)": [[2, "manual_stableswap.StableswapFactory"]], "stableswapvault (class in stableswappy.vault)": [[2, "stableswappy.vault.StableswapVault"]], "add_liquidity() (manual_stableswap.stableswapexchange method)": [[2, "manual_stableswap.StableswapExchange.add_liquidity"]], "add_token() (stableswappy.vault.stableswapvault method)": [[2, "stableswappy.vault.StableswapVault.add_token"]], "amt2dec() (stableswappy.vault.stableswapvault method)": [[2, "stableswappy.vault.StableswapVault.amt2dec"]], "burn() (manual_stableswap.stableswapexchange method)": [[2, "manual_stableswap.StableswapExchange.burn"]], "check_tkn() (stableswappy.vault.stableswapvault method)": [[2, "stableswappy.vault.StableswapVault.check_tkn"]], "deploy() (manual_stableswap.stableswapfactory method)": [[2, "manual_stableswap.StableswapFactory.deploy"]], "deposit() (stableswappy.erc.erc20 method)": [[2, "stableswappy.erc.ERC20.deposit"]], "get_amount_out() (manual_stableswap.stableswapexchange method)": [[2, "manual_stableswap.StableswapExchange.get_amount_out"]], "get_balances() (stableswappy.vault.stableswapvault method)": [[2, "stableswappy.vault.StableswapVault.get_balances"]], "get_decimal_amts() (stableswappy.vault.stableswapvault method)": [[2, "stableswappy.vault.StableswapVault.get_decimal_amts"]], "get_decimals() (stableswappy.vault.stableswapvault method)": [[2, "stableswappy.vault.StableswapVault.get_decimals"]], "get_dict() (stableswappy.vault.stableswapvault method)": [[2, "stableswappy.vault.StableswapVault.get_dict"]], "get_exchange() (manual_stableswap.stableswapfactory method)": [[2, "manual_stableswap.StableswapFactory.get_exchange"]], "get_lp_from_amount() (manual_stableswap.csquote method)": [[2, "manual_stableswap.CSQuote.get_lp_from_amount"]], "get_math_pool() (manual_stableswap.stableswapexchange method)": [[2, "manual_stableswap.StableswapExchange.get_math_pool"]], "get_name() (stableswappy.vault.stableswapvault method)": [[2, "stableswappy.vault.StableswapVault.get_name"]], "get_names() (stableswappy.vault.stableswapvault method)": [[2, "stableswappy.vault.StableswapVault.get_names"]], "get_price() (manual_stableswap.stableswapexchange method)": [[2, "manual_stableswap.StableswapExchange.get_price"]], "get_rates() (stableswappy.vault.stableswapvault method)": [[2, "stableswappy.vault.StableswapVault.get_rates"]], "get_reserve() (manual_stableswap.stableswapexchange method)": [[2, "manual_stableswap.StableswapExchange.get_reserve"]], "get_token() (manual_stableswap.stableswapfactory method)": [[2, "manual_stableswap.StableswapFactory.get_token"]], "get_token() (stableswappy.vault.stableswapvault method)": [[2, "stableswappy.vault.StableswapVault.get_token"]], "get_tokens() (stableswappy.vault.stableswapvault method)": [[2, "stableswappy.vault.StableswapVault.get_tokens"]], "join_pool() (manual_stableswap.stableswapexchange method)": [[2, "manual_stableswap.StableswapExchange.join_pool"]], "manual_stableswap": [[2, "module-0"], [2, "module-manual_stableswap"]], "mint() (manual_stableswap.stableswapexchange method)": [[2, "manual_stableswap.StableswapExchange.mint"]], "remove_liquidity() (manual_stableswap.stableswapexchange method)": [[2, "manual_stableswap.StableswapExchange.remove_liquidity"]], "stableswappy.erc": [[2, "module-stableswappy.erc"]], "stableswappy.vault": [[2, "module-stableswappy.vault"]], "summary() (manual_stableswap.stableswapexchange method)": [[2, "manual_stableswap.StableswapExchange.summary"]], "swap() (manual_stableswap.stableswapexchange method)": [[2, "manual_stableswap.StableswapExchange.swap"]], "transfer() (stableswappy.erc.erc20 method)": [[2, "stableswappy.erc.ERC20.transfer"]], "erc20 (class in uniswappy.erc)": [[10, "uniswappy.erc.ERC20"]], "indextokenquote (class in uniswappy.cpt.quote)": [[10, "uniswappy.cpt.quote.IndexTokenQuote"]], "lperc20 (class in uniswappy.erc)": [[10, "uniswappy.erc.LPERC20"]], "lpquote (class in uniswappy.cpt.quote)": [[10, "uniswappy.cpt.quote.LPQuote"]], "rebaseindextoken (class in uniswappy.cpt.index)": [[10, "uniswappy.cpt.index.RebaseIndexToken"]], "settlementlptoken (class in uniswappy.cpt.index)": [[10, "uniswappy.cpt.index.SettlementLPToken"]], "uniswapexchange (class in uniswappy.cpt.exchg)": [[10, "uniswappy.cpt.exchg.UniswapExchange"]], "uniswapfactory (class in uniswappy.cpt.factory)": [[10, "uniswappy.cpt.factory.UniswapFactory"]], "add_liquidity() (uniswappy.cpt.exchg.uniswapexchange method)": [[10, "uniswappy.cpt.exchg.UniswapExchange.add_liquidity"]], "add_token_lp() (uniswappy.erc.lperc20 method)": [[10, "uniswappy.erc.LPERC20.add_token_lp"]], "apply() (uniswappy.cpt.index.rebaseindextoken method)": [[10, "uniswappy.cpt.index.RebaseIndexToken.apply"]], "apply() (uniswappy.cpt.index.settlementlptoken method)": [[10, "uniswappy.cpt.index.SettlementLPToken.apply"]], "base_x_asset() (uniswappy.cpt.quote.indextokenquote method)": [[10, "uniswappy.cpt.quote.IndexTokenQuote.base_x_asset"]], "base_y_asset() (uniswappy.cpt.quote.indextokenquote method)": [[10, "uniswappy.cpt.quote.IndexTokenQuote.base_y_asset"]], "burn() (uniswappy.cpt.exchg.uniswapexchange method)": [[10, "uniswappy.cpt.exchg.UniswapExchange.burn"]], "deploy() (uniswappy.cpt.factory.uniswapfactory method)": [[10, "uniswappy.cpt.factory.UniswapFactory.deploy"]], "deposit() (uniswappy.erc.erc20 method)": [[10, "uniswappy.erc.ERC20.deposit"]], "get_amount() (uniswappy.cpt.quote.lpquote method)": [[10, "uniswappy.cpt.quote.LPQuote.get_amount"]], "get_amount_from_lp() (uniswappy.cpt.quote.lpquote method)": [[10, "uniswappy.cpt.quote.LPQuote.get_amount_from_lp"]], "get_amount_out() (uniswappy.cpt.exchg.uniswapexchange method)": [[10, "uniswappy.cpt.exchg.UniswapExchange.get_amount_out"]], "get_amount_out0() (uniswappy.cpt.exchg.uniswapexchange method)": [[10, "uniswappy.cpt.exchg.UniswapExchange.get_amount_out0"]], "get_amount_out1() (uniswappy.cpt.exchg.uniswapexchange method)": [[10, "uniswappy.cpt.exchg.UniswapExchange.get_amount_out1"]], "get_amounts() (uniswappy.cpt.exchg.uniswapexchange method)": [[10, "uniswappy.cpt.exchg.UniswapExchange.get_amounts"]], "get_base_lp() (uniswappy.cpt.quote.indextokenquote method)": [[10, "uniswappy.cpt.quote.IndexTokenQuote.get_base_lp"]], "get_exchange() (uniswappy.cpt.factory.uniswapfactory method)": [[10, "uniswappy.cpt.factory.UniswapFactory.get_exchange"]], "get_liquidity() (uniswappy.cpt.quote.lpquote method)": [[10, "uniswappy.cpt.quote.LPQuote.get_liquidity"]], "get_lp_from_amount() (uniswappy.cpt.quote.lpquote method)": [[10, "uniswappy.cpt.quote.LPQuote.get_lp_from_amount"]], "get_native_x() (uniswappy.cpt.quote.indextokenquote method)": [[10, "uniswappy.cpt.quote.IndexTokenQuote.get_native_x"]], "get_native_y() (uniswappy.cpt.quote.indextokenquote method)": [[10, "uniswappy.cpt.quote.IndexTokenQuote.get_native_y"]], "get_opposing_token() (uniswappy.cpt.quote.lpquote method)": [[10, "uniswappy.cpt.quote.LPQuote.get_opposing_token"]], "get_price() (uniswappy.cpt.exchg.uniswapexchange method)": [[10, "uniswappy.cpt.exchg.UniswapExchange.get_price"]], "get_price() (uniswappy.cpt.quote.lpquote method)": [[10, "uniswappy.cpt.quote.LPQuote.get_price"]], "get_reserve() (uniswappy.cpt.exchg.uniswapexchange method)": [[10, "uniswappy.cpt.exchg.UniswapExchange.get_reserve"]], "get_reserve() (uniswappy.cpt.quote.lpquote method)": [[10, "uniswappy.cpt.quote.LPQuote.get_reserve"]], "get_token() (uniswappy.cpt.factory.uniswapfactory method)": [[10, "uniswappy.cpt.factory.UniswapFactory.get_token"]], "get_x() (uniswappy.cpt.quote.indextokenquote method)": [[10, "uniswappy.cpt.quote.IndexTokenQuote.get_x"]], "get_y() (uniswappy.cpt.quote.indextokenquote method)": [[10, "uniswappy.cpt.quote.IndexTokenQuote.get_y"]], "mint() (uniswappy.cpt.exchg.uniswapexchange method)": [[10, "uniswappy.cpt.exchg.UniswapExchange.mint"]], "quote() (uniswappy.cpt.exchg.uniswapexchange method)": [[10, "uniswappy.cpt.exchg.UniswapExchange.quote"]], "remove_liquidity() (uniswappy.cpt.exchg.uniswapexchange method)": [[10, "uniswappy.cpt.exchg.UniswapExchange.remove_liquidity"]], "remove_token_lp() (uniswappy.erc.lperc20 method)": [[10, "uniswappy.erc.LPERC20.remove_token_lp"]], "set_token_lp() (uniswappy.erc.lperc20 method)": [[10, "uniswappy.erc.LPERC20.set_token_lp"]], "swap() (uniswappy.cpt.exchg.uniswapexchange method)": [[10, "uniswappy.cpt.exchg.UniswapExchange.swap"]], "swap_exact_tokens_for_tokens() (uniswappy.cpt.exchg.uniswapexchange method)": [[10, "uniswappy.cpt.exchg.UniswapExchange.swap_exact_tokens_for_tokens"]], "transfer() (uniswappy.erc.erc20 method)": [[10, "uniswappy.erc.ERC20.transfer"]], "uniswappy.cpt.exchg": [[10, "module-uniswappy.cpt.exchg"]], "uniswappy.cpt.factory": [[10, "module-uniswappy.cpt.factory"]], "uniswappy.cpt.index": [[10, "module-uniswappy.cpt.index"]], "uniswappy.cpt.quote": [[10, "module-uniswappy.cpt.quote"]], "uniswappy.erc": [[10, "module-uniswappy.erc"]], "update_reserves() (uniswappy.cpt.exchg.uniswapexchange method)": [[10, "uniswappy.cpt.exchg.UniswapExchange.update_reserves"]]}})